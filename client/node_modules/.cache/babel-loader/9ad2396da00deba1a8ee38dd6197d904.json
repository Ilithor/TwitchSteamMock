{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  renderInput({\n    input,\n    label,\n    meta\n  }) {\n    return React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, label), React.createElement(\"input\", Object.assign({}, input, {\n      autoComplete: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, meta.error));\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    // only ran if the user did not enter a title\n    errors.title = 'Must enter a title';\n  }\n\n  if (!formValues.description) {\n    // only ran if the user did not enter a description\n    errors.description = 'Must enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);","map":{"version":3,"sources":["E:\\Projects\\streams\\client\\src\\components\\streams\\StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","label","meta","error","onSubmit","formValues","console","log","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAD,EAAyB;AAChC,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,KAAR,CADJ,EAEI,+CAAWD,KAAX;AAAkB,MAAA,YAAY,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAME,IAAI,CAACC,KAAX,CAHJ,CADJ;AAOH;;AAEDC,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAAhB;AAAwD,MAAA,SAAS,EAAC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,SAAS,EAAE,KAAKL,WAFpB;AAGI,MAAA,KAAK,EAAC,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,aADT;AAEI,MAAA,SAAS,EAAE,KAAKA,WAFpB;AAGI,MAAA,KAAK,EAAC,mBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAWI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,CADJ;AAeH;;AA/BsC;;AAkC3C,MAAMY,QAAQ,GAAIN,UAAD,IAAgB;AAC7B,QAAMO,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACP,UAAU,CAACQ,KAAhB,EAAuB;AACnB;AACAD,IAAAA,MAAM,CAACC,KAAP,GAAe,oBAAf;AACH;;AAED,MAAI,CAACR,UAAU,CAACS,WAAhB,EAA6B;AACzB;AACAF,IAAAA,MAAM,CAACE,WAAP,GAAqB,0BAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAdD;;AAgBA,eAAehB,SAAS,CAAC;AACrBmB,EAAAA,IAAI,EAAE,cADe;AAErBJ,EAAAA;AAFqB,CAAD,CAAT,CAGZd,YAHY,CAAf","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nclass StreamCreate extends React.Component {\r\n    renderInput({ input, label, meta }) {\r\n        return (\r\n            <div className=\"field\">\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete />\r\n                <div>{meta.error}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSubmit(formValues) {\r\n        console.log(formValues)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\r\n                <Field\r\n                    name=\"title\"\r\n                    component={this.renderInput}\r\n                    label=\"Enter Title\"\r\n                />\r\n                <Field\r\n                    name=\"description\"\r\n                    component={this.renderInput}\r\n                    label=\"Enter Description\"\r\n                />\r\n                <button className=\"ui button primary\">Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {}\r\n\r\n    if (!formValues.title) {\r\n        // only ran if the user did not enter a title\r\n        errors.title = 'Must enter a title'\r\n    }\r\n\r\n    if (!formValues.description) {\r\n        // only ran if the user did not enter a description\r\n        errors.description = 'Must enter a description'\r\n    }\r\n\r\n    return errors\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'streamCreate',\r\n    validate\r\n})(StreamCreate)\r\n"]},"metadata":{},"sourceType":"module"}